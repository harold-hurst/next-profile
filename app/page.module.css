.page {

  /* min-height: 100svh ensures that the element's height will always be at least
  as tall as the smallest dimension of the viewport. So, if the viewport is in a
  portrait or landscape orientation, the element will adapt to the smaller side. */
  min-height: 100svh;
  padding: 0 80px 0;
  
  color: rgb(210, 216, 223);
  padding: 3rem 1.5rem;
}

@media (min-width: 768px) {
  .page {
    padding: 4rem 3rem;
  }
}

@media (min-width: 1024px) {

  .page {
    padding-top: 0;
    padding-bottom: 0;
  }

  .flexContainer {
    display: flex;
    justify-content: space-between;
    gap: 1rem; /* 16px */
    width: 100%;
  }


  .header {

    position: sticky;
    top: 0;
    display: flex;
    max-height: 100vh;
    flex-direction: column;
    justify-content: space-between;
    padding-top: 6rem;
    padding-bottom: 6rem;


  }
}

.header {
  flex: 1;
}

.main {
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: 32px;
  grid-row-start: 2;
}


@media (min-width: 1024px) {


  .main {

    padding-top: 6rem;
    padding-bottom: 6rem;


  }
}


.main ol {
  padding-left: 0;
  margin: 0;
  font-size: 14px;
  line-height: 24px;
  letter-spacing: -0.01em;
  list-style-position: inside;
}

.main li:not(:last-of-type) {
  margin-bottom: 8px;
}

.main code {
  font-family: inherit;
  background: var(--gray-alpha-100);
  padding: 2px 4px;
  border-radius: 4px;
  font-weight: 600;
}

/* experience grid items */

.gridItem {
  position: relative;
  display: grid;
}

/* an aesthetic shaded box on hover */
.hoverBox {
  transition: all 0.2s ease-in-out; /* transition-all */
  position: absolute; /* absolute */
  inset-inline: -1rem; /* -inset-x-4 (left & right: -16px) */
  top: -1rem; /* -inset-y-4 (top: -16px) */
  bottom: -1rem; /* -inset-y-4 (bottom: -16px) */
  z-index: 0; /* z-0 */
}


@media (min-width: 640px) {
  .gridItem {

    gap: 2rem;
    grid-template-columns: repeat(8, minmax(0, 1fr));
}
}
  @media (min-width: 768px) {

    .gridItem {

        gap: 1rem;
    }
}



@media (min-width: 1024px) { /* lg */
  .hoverBox:hover {


      background-color: rgba(30, 41, 59, 0.5); /* slate-800 with 50% opacity */
        box-shadow: inset 0 1px 0 0 rgba(148, 163, 184, 0.1); /* inset shadow */
        filter: drop-shadow(0 10px 8px rgba(0, 0, 0, 0.1)) drop-shadow(0 4px 3px rgba(0, 0, 0, 0.05)); /* Large drop shadow */
    
  }

}


